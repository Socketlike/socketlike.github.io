{
  "$id": "https://socketlike.github.io/replugged/addon.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Replugged Addon Schema",
  "description": "General schema for Replugged addons (plugin and theme keys)",
  "type": "object",
  "properties": {
    "type": {
      "description": "Must be `replugged-plugin` or `replugged-theme`.",
      "anyOf": [{ "const": "replugged-plugin" }, { "const": "replugged-theme" }]
    },
    "renderer": {
      "type": "string",
      "description": "This is the path to the main entrypoint of your plugin (JavaScript). The plugin template will allow you to also use TypeScript and will handle compiling and updating the file location for you."
    },
    "plaintextPatches": {
      "type": "string",
      "description": "The path to the plaintext patches file (JavaScript)."
    },
    "reloadRequired": {
      "type": "boolean",
      "description": "Whether Replugged should prompt the user to reload once your plugin on installation. Defaults to `false` unless you specified a `plaintextPatches` file."
    },
    "main": {
      "type": "string",
      "description": "The path to the main entrypoint of your theme (CSS). The theme template will allow you to also use SCSS and will handle compiling and updating the file location for you."
    },
    "id": {
      "type": "string",
      "description": "The unique identifier of your addon. This should be in reverse domain name notation and cannot be changed once your addon is published."
    },
    "name": {
      "type": "string",
      "description": "The name of your addon."
    },
    "description": {
      "type": "string",
      "description": "A short description of your addon. Will be displayed in the store, as well as the addon settings page."
    },
    "author": {
      "description": "The author(s) of your addon. Array cannot be empty.",
      "anyOf": [
        { "$ref": "#/$def/author" },
        {
          "type": "array",
          "items": { "$ref": "#/$def/author" },
          "minItems": 1
        }
      ]
    },
    "version": {
      "type": "string",
      "description": "The version of your addon. We recommend the format `x.y.z`, though that is not required. This will be shown with a `v` prefix."
    },
    "updater": {
      "$ref": "#/$def/updater",
      "description": "Where Replugged will check for updates to your addon."
    },
    "license": {
      "type": "string",
      "description": "The license of your addon. We recommend using SPDX identifiers, eg `MIT` or `GPL-3.0`."
    },
    "image": {
      "description": "A URL or array of URLs to preview images of your addon to be displayed in the store. Must be hosted on Discord's CDN (cdn.discordapp.com or media.discordapp.net) or Imgur.",
      "anyOf": [{ "type": "string" }, { "type": "array", "items": { "type": "string" } }]
    },
    "source": {
      "type": "string",
      "description": "A URL to the source code of your addon. This will be displayed in the store and in the addon settings card."
    }
  },
  "$def": {
    "author": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The display name of the author."
        },
        "discordID": {
          "type": "string",
          "description": "The Discord ID of the author."
        },
        "github": {
          "type": "string",
          "description": "The GitHub username of the author."
        }
      },
      "required": ["name"]
    },
    "updater": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the updater to use.",
          "anyOf": [{ "const": "github" }, { "const": "store" }]
        },
        "id": {
          "type": "string",
          "description": "The ID of the addon in the source."
        }
      }
    }
  },
  "required": ["type", "id", "name", "description", "author", "version", "license"]
}
